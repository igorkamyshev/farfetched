{
  "fileName": "index.ts",
  "filePath": "packages/core/index.ts",
  "url": "https://github.com/igorkamyshev/farfetched/packages/core/index.ts",
  "summary": "The code provided is a module that exports various APIs and libraries for the \"farfetched\" project. The purpose of this code is to provide a set of public APIs and libraries that can be used for different functionalities within the project.\n\nThe code is organized into different sections, each representing a different aspect of the project. Here is a breakdown of each section:\n\n1. Contract public API: This section exports the `Contract` type and the `unknownContract` function from the `./src/contract` directory. This API is likely used for defining and handling contracts within the project.\n\n2. Query public API: This section exports various functions and types related to querying data. It includes functions like `createQuery`, `connectQuery`, `createHeadlessQuery`, and `createJsonQuery`. These functions are likely used for creating and executing queries to retrieve data from a data source.\n\n3. Mutation public API: This section exports functions and types related to performing mutations on data. It includes functions like `createMutation`, `createHeadlessMutation`, and `createJsonMutation`. These functions are likely used for creating and executing mutations to modify data in a data source.\n\n4. Retry public API: This section exports the `retry` function and the `exponentialDelay` and `linearDelay` functions from the `./src/retry` directory. This API is likely used for implementing retry logic for failed operations.\n\n5. Update public API: This section exports the `update` function from the `./src/update` directory. This API is likely used for updating data in a data source.\n\n6. Attach public API: This section exports the `attachOperation` function from the `./src/attach` directory. This API is likely used for attaching operations to a data source.\n\n7. Cache public API: This section exports various functions and types related to caching data. It includes functions like `cache` and `createCacheAdapter`, as well as different cache adapter implementations like `inMemoryCache`, `localStorageCache`, `sessionStorageCache`, and `voidCache`. These functions and adapters are likely used for implementing caching mechanisms in the project.\n\n8. Exposed libs: This section exports various types and functions related to the project's internal libraries. It includes types like `SourcedField`, `DynamicallySourcedField`, and `FetchingStatus`, as well as functions like `normalizeSourced` and `combineSourced`. These libraries are likely used for internal data manipulation and management.\n\n9. RemoteOperation public API: This section exports types and functions related to remote operations. It includes types like `RemoteOperationResult`, `RemoteOperationError`, and `RemoteOperationParams`, as well as the `declareParams` function. These APIs are likely used for defining and handling remote operations.\n\n10. Validation public API: This section exports types related to data validation. It includes types like `ValidationResult` and `Validator`. These types are likely used for validating data within the project.\n\n11. Exposed fetch: This section exports types and functions related to fetching data. It includes types like `Json` and `JsonObject`, as well as the `fetchFx` function. These APIs are likely used for making HTTP requests and handling responses.\n\n12. Exposed errors: This section exports various types and functions related to error handling. It includes types like `FarfetchedError`, `InvalidDataError`, `TimeoutError`, `AbortError`, `PreparationError`, `HttpError`, and `NetworkError`, as well as functions for creating and checking different types of errors. These APIs are likely used for handling different types of errors that can occur within the project.\n\n13. Trigger API: This section exports the `keepFresh` function from the `./src/trigger_api` directory. This API is likely used for implementing trigger functionality within the project.\n\nOverall, this code provides a comprehensive set of APIs and libraries that can be used for different functionalities within the \"farfetched\" project, including querying, mutating, caching, error handling, and more.",
  "questions": "1. What are the different public APIs available in this code?\n- The code exports public APIs for Contract, Query, Mutation, Retry, Update, Attach, Cache, Exposed libs, RemoteOperation, Validation, Fetch, Errors, and Trigger.\n\n2. What are the different cache adapters available in this code?\n- The code exports cache adapters for in-memory, local storage, session storage, and void.\n\n3. What are the different types of errors exposed in this code?\n- The code exports types for FarfetchedError, InvalidDataError, TimeoutError, AbortError, PreparationError, HttpError, and NetworkError."
}